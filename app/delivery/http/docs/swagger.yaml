basePath: /api/v1
definitions:
  payload.ProductSaveRequest:
    properties:
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 255
        type: string
      price:
        minimum: 0
        type: number
    required:
    - name
    type: object
  presenter.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Pearshop backend api docs
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: pearshop backend
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Find return a list of product
      parameters:
      - in: query
        maxLength: 1000
        name: description
        type: string
      - in: query
        maxLength: 255
        name: name
        type: string
      - description: page number
        in: query
        minimum: 1
        name: page
        type: integer
      - in: query
        name: price
        type: number
      - description: number of items per page
        in: query
        maximum: 100
        minimum: 1
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.Product'
            type: array
      summary: Find return a list of product
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create add new product
      parameters:
      - description: Body of request
        in: body
        name: payloadBody
        required: true
        schema:
          $ref: '#/definitions/payload.ProductSaveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Product'
      summary: Create add new product
      tags:
      - products
  /products/:id:
    put:
      consumes:
      - application/json
      description: Update modify product information by id
      parameters:
      - description: Body of request
        in: body
        name: payloadBody
        required: true
        schema:
          $ref: '#/definitions/payload.ProductSaveRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.Product'
      summary: Update modify product information by id
      tags:
      - products
swagger: "2.0"
